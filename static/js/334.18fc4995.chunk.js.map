{"version":3,"file":"static/js/334.18fc4995.chunk.js","mappings":"sQAoCA,EALc,CACZA,WA7BiB,SAACC,GAClBC,EAAAA,GAAAA,MAAYD,EAAS,CACnBE,SAAU,eACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,QACPC,KAAI,GAER,EAkBEC,aAhBmB,SAACZ,GACpBC,EAAAA,GAAAA,MAAYD,EAAS,CACnBE,SAAU,eACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,QACPC,KAAI,GAER,G,SC2CA,EA7DkC,WAChC,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjBC,GAA8DC,EAAAA,EAAAA,KAC5D,SAACC,GAAK,OAAKA,EAAMC,WAAW,IADtBA,EAAWH,EAAXG,YAAaC,EAAkBJ,EAAlBI,mBAIfC,GAJmDL,EAAhBM,kBAI1BC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,IAERC,iBAAkBC,EAAAA,EAClBC,SAAU,SAACC,GACTjB,GACIkB,EAAAA,EAAAA,GACAD,EAAOJ,OAERM,SACAC,MAAK,WACJlB,EAAS,oBAADmB,OAAqBJ,EAAOJ,MAAQ,CAACN,YAAAA,GAC/C,IACCe,OAAM,SAACC,GACNC,EAAAA,WAAiB,+HACnB,GACJ,KAEF,OACEC,EAAAA,EAAAA,KAAA,WAASC,GAAG,0BAA0BC,UAAU,OAAMC,UACpDC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAF,SAAA,EACRH,EAAAA,EAAAA,KAACM,EAAAA,EAAY,CAACC,MAAO,gFACrBP,EAAAA,EAAAA,KAAA,MAAIE,UAAU,sBAAqBC,SAAC,yNAGpCC,EAAAA,EAAAA,MAACI,EAAAA,EAAI,CAACjB,SAAUP,EAAOyB,aAAaN,SAAA,EAClCC,EAAAA,EAAAA,MAACI,EAAAA,EAAAA,MAAU,CAACN,UAAU,OAAMC,SAAA,EAC1BH,EAAAA,EAAAA,KAACU,EAAAA,EAAa,CACZC,UAAU,gBACVC,MAAM,mFACNV,UAAU,OAAMC,UAEhBH,EAAAA,EAAAA,KAACQ,EAAAA,EAAAA,QAAY,CACXK,KAAK,OACLC,YAAY,OACZC,KAAK,OACLC,SAAUhC,EAAOiC,aACjBC,MAAOlC,EAAOQ,OAAOJ,KACrB+B,YAAanC,EAAOoC,OAAOhC,UAG/BY,EAAAA,EAAAA,KAACQ,EAAAA,EAAAA,QAAAA,SAAqB,CAACK,KAAK,UAASV,SAClCnB,EAAOoC,OAAOhC,WAGnBY,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAACC,QAASvC,EAAoBwC,WAAY,SAAUC,WAAY,oCAKrF,C,4FCpEWlC,EAAyBmC,EAAAA,KAAaC,MAAM,CACrDtC,KAAMqC,EAAAA,GAAW,6GAAwBE,IAAI,GAAGC,SAC9C,mEAIOC,EAAkBJ,EAAAA,KAAaC,MAAM,CAC9CI,QAASL,EAAAA,GAAW,6GAAwBG,SAC1C,6EAEFG,MAAON,EAAAA,KAAaM,MAAM,6JAAgCH,SACxD,mIAEFlE,QAAS+D,EAAAA,GAAW,6GAAwBG,SAC1C,oF","sources":["components/shared/Toast/Toast.jsx","pages/Site/AuthenticatedCertificates.jsx","util/validationSchema.js"],"sourcesContent":["import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst ErrorToast = (message) => {\r\n  toast.error(message, {\r\n    position: \"bottom-right\",\r\n    autoClose: 2000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n    rtl:true,\r\n  });\r\n}\r\n\r\nconst SuccessToast = (message) => {\r\n  toast.error(message, {\r\n    position: \"bottom-right\",\r\n    autoClose: 2000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n    rtl:true,\r\n  });\r\n}\r\n\r\nconst Toast = {\r\n  ErrorToast,\r\n  SuccessToast\r\n}\r\n\r\nexport default Toast","import React from \"react\";\r\nimport SectionTitle from \"../../components/site/SectionTitle\";\r\nimport { Container, FloatingLabel, Form } from \"react-bootstrap\";\r\nimport { useFormik } from \"formik\";\r\nimport { CheckCertificateSchema } from \"../../util/validationSchema\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MainButton from \"../../components/shared/Buttons/MainButton\";\r\nimport { fetchCertificate } from \"../../services/certificate.service\";\r\nimport Toast from \"../../components/shared/Toast/Toast\";\r\n\r\nconst AuthenticatedCertificates = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { certificate, certificateLoading ,certificateError } = useSelector(\r\n    (state) => state.certificate\r\n  );\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code: \"\",\r\n    },\r\n    validationSchema: CheckCertificateSchema,\r\n    onSubmit: (values) => {\r\n      dispatch(\r\n          fetchCertificate(\r\n          values.code\r\n        ))\r\n        .unwrap()\r\n        .then(() => {\r\n          navigate(`/certificateView/${values.code}`, {certificate})\r\n        })\r\n        .catch((error) => {\r\n          Toast.ErrorToast('يرجى التحقق من صحة الكود')\r\n        });\r\n    },\r\n  });\r\n  return (\r\n    <section id=\"foundCertificateSection\" className=\"mt-5\">\r\n      <Container>\r\n        <SectionTitle title={\"تحقق من شهادتك\"} />\r\n        <h5 className=\"section-description\">\r\n          ادخل كود الشهادة الخاص بك للتأكد من صحتها\r\n        </h5>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Group className=\"mb-3\">\r\n            <FloatingLabel\r\n              controlId=\"floatingInput\"\r\n              label=\"ادخل كود شهادتك\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"code\"\r\n                name=\"code\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.code}\r\n                isInvalid={!!formik.errors.code}\r\n              />\r\n            </FloatingLabel>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {formik.errors.code}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <MainButton loading={certificateLoading} buttonType={\"submit\"} buttonText={\"ابحث\"} />\r\n        </Form>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthenticatedCertificates;\r\n","import * as Yup from \"yup\";\r\n\r\nexport let CheckCertificateSchema = Yup.object().shape({\r\n  code: Yup.string(\"صيغة الكود غير صحيحة\").min(3).required(\r\n    \"الكود مطلوب\"\r\n  ),\r\n});\r\n\r\nexport let ContactUsSchema = Yup.object().shape({\r\n  subject: Yup.string(\"صيغة الكود غير صحيحة\").required(\r\n    \"الموضوع مطلوب\"\r\n  ),\r\n  email: Yup.string().email(\"صيغة البريد الالكتروني خاطئة\").required(\r\n    \"البريدالالكتروني مطلوب\"\r\n  ),\r\n  message: Yup.string(\"صيغة الكود غير صحيحة\").required(\r\n    \"الرسالة مطلوبة\"\r\n  ),\r\n});"],"names":["ErrorToast","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","rtl","SuccessToast","dispatch","useDispatch","navigate","useNavigate","_useSelector","useSelector","state","certificate","certificateLoading","formik","certificateError","useFormik","initialValues","code","validationSchema","CheckCertificateSchema","onSubmit","values","fetchCertificate","unwrap","then","concat","catch","error","Toast","_jsx","id","className","children","_jsxs","Container","SectionTitle","title","Form","handleSubmit","FloatingLabel","controlId","label","type","placeholder","name","onChange","handleChange","value","isInvalid","errors","MainButton","loading","buttonType","buttonText","Yup","shape","min","required","ContactUsSchema","subject","email"],"sourceRoot":""}